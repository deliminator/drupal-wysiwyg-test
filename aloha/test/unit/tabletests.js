/* tabletests.js is part of Aloha Editor project http://aloha-editor.org
 *
 * Aloha Editor is a WYSIWYG HTML5 inline editing library and editor. 
 * Copyright (c) 2010-2012 Gentics Software GmbH, Vienna, Austria.
 * Contributors http://aloha-editor.org/contribution.php 
 * 
 * Aloha Editor is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 *
 * Aloha Editor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * 
 * As an additional permission to the GNU GPL version 2, you may distribute
 * non-source (e.g., minimized or compacted) forms of the Aloha-Editor
 * source code without the copy of the GNU GPL normally required,
 * provided you include this license notice and a URL through which
 * recipients can access the Corresponding Source.
 */

define(["testutils","htmlbeautifier"],function(e){function t(e){var t=[],n=e.obj.find(".aloha-cell-selected");return n.each(function(){t.push(this)}),t}var n=[{module:"Activation/deactivation"},{exclude:!1,desc:"Activate and deactivate a table",start:"<table><tbody><tr><td>foo</td></tr></tbody></table>",expected:"<table><tbody><tr><td>foo</td></tr></tbody></table>",operation:function(e){}},{module:"makeClean"},{exclude:!1,desc:"makeClean",start:'<table class="original"><tbody>							<tr><td>test</td></tr>						 </tbody></table>',expected:'<table class="original"><tbody>							<tr><td>test</td></tr>						 </tbody></table>						 <!-- <table class="clone"><tbody><tr><td>test</td></tr></tbody></table> -->',operation:function(e){var t=jQuery("#editable").clone(!1);t.find("table").addClass("clone").removeClass("original"),e.tablePlugin.makeClean(t),jQuery("#editable").append("<!-- "+t.html().replace(/[\r\n]/g,"").replace(/>\s*(.*?)\s*</g,">$1<")+" -->")}},{module:"Row/column selection"},{exclude
:!1,desc:"Select column by index (corrected to 1-index)",start:"<table><tbody><tr><td>foo</td></tr></tbody></table>",expected:"<table><tbody><tr><td>bar</td></tr></tbody></table>",operation:function(e){e.selection.selectColumns([1]),e.obj.find(".aloha-cell-selected").html("bar").removeAttr("class").removeAttr("style")}},{exclude:!1,desc:"Select row by index (corrected to 1-index)",start:"<table><tbody><tr><td>foo</td></tr></tbody></table>",expected:"<table><tbody><tr><td>bar</td></tr></tbody></table>",operation:function(e){e.selection.selectRows([1]),e.obj.find(".aloha-cell-selected").html("bar").removeAttr("class").removeAttr("style")}},{module:"Inserting/removing columns"},{exclude:!1,desc:"Insert column right of column at index 0 (corrected to 1)",start:"<table><tbody>							<tr><td>foo</td><td>bar</td></tr>						 </tbody></table>",expected:"<table><tbody>							<tr><td>foo</td><td>&nbsp;</td><td>bar</td></tr>						 </tbody></table>",operation:function(e){e.selection.selectColumns([1
]),e.addColumnsRight()}},{exclude:!1,desc:"Insert column right of column at index 1 (corrected to 2)",start:"<table><tbody>							<tr><td>foo</td><td>bar</td></tr>						 </tbody></table>",expected:"<table><tbody>							<tr><td>foo</td><td>&nbsp;</td><td>bar</td></tr>						 </tbody></table>",operation:function(e){e.selection.selectColumns([2]),e.addColumnsLeft()}},{exclude:!1,desc:"Insert column left of 1st column (column 0, corrected to 1)",start:"<table><tbody>							<tr><td>foo</td></tr>						 </tbody></table>",expected:"<table><tbody>							<tr><td>&nbsp;</td><td>foo</td></tr>						 </tbody></table>",operation:function(e){e.selection.selectColumns([1]),e.addColumnsLeft()}},{exclude:!1,desc:"Add column left of 2nd column (corrected to 2)",start:"<table><tbody>							<tr><td>foo</td><td>bar</td></tr>							<tr><td>foo1</td><td>bar2</td></tr>						 </tbody></table>",expected:"<table><tbody>							<tr><td>foo</td><td>&nbsp;</td><td>bar</td></tr>							<tr><td>foo1</td><td>&nbsp;</td><td>bar2</td></tr>						 </tbody></table>"
,operation:function(e){e.selection.selectColumns([2]),e.addColumnsLeft()}},{exclude:!1,desc:"Column selection with merged cells ",start:'<table><tbody>							<tr><td colspan="2" rowspan="1">foo1 bar1</td></tr>							<tr><td>foo2</td><td>bar2</td></tr>						 </tbody></table>',expected:'<table><tbody>							<tr><td colspan="2" rowspan="1">foo1 bar1</td></tr>							<tr><td>foo2</td><td>was selected</td></tr>						 </tbody></table>',operation:function(e){e.selection.selectColumns([2]),e.obj.find(".aloha-cell-selected").html("was selected").removeAttr("class").removeAttr("style")}},{exclude:!1,desc:"Insert column before column 2, with merged cells (corrected to 2)",start:'<table><tbody>							<tr><td colspan="2" rowspan="1">foo1 bar1</td></tr>							<tr><td>foo2</td><td>bar2</td></tr>						 </tbody></table>',expected:'<table><tbody>							<tr><td colspan="2" rowspan="1">foo1 bar1</td><td>&nbsp;</td></tr>							<tr><td>foo2</td><td>&nbsp;</td><td>bar2</td></tr>						 </tbody></table>',operation
:function(e){e.selection.selectColumns([2]),e.addColumnsLeft()}},{exclude:!1,desc:"Remove 2nd column (corrected to 2)",start:'<table><tbody>							<tr><td>foo1</td><td class="aloha-cell-selected">bar1</td></tr>							<tr><td>foo2</td><td class="aloha-cell-selected">bar2</td></tr>						 </tbody></table>',expected:"<table><tbody>							<tr><td>foo1</td></tr>							<tr><td>foo2</td></tr>						 </tbody></table>",operation:function(e){e.selection.selectColumns([2]),e.deleteColumns()}},{exclude:!1,desc:"Remove 2nd column (corrected to 2) of merged row",start:'<table><tbody>							<tr><td colspan="3" rowspan="1">foo1 bar1 test1</td></tr>							<tr><td>foo2</td><td class="aloha-cell-selected">bar2</td><td>test2</td></tr>						 </tbody></table>',expected:'<table><tbody>							<tr><td colspan="2" rowspan="1">foo1 bar1 test1</td></tr>							<tr><td>foo2</td><td>test2</td></tr>						 </tbody></table>',operation:function(e){e.selection.selectColumns([2]),e.deleteColumns()}},{module:"Inserting/removing rows"
},{exclude:!1,desc:"Add row at index 0 (corrected to 1)",start:"<table><tbody>							<tr><td>foo</td></tr>						 </tbody></table>",expected:"<table><tbody>							<tr><td>&nbsp;</td></tr>							<tr><td>foo</td></tr>						 </tbody></table>",operation:function(e){e.addRow(1)}},{exclude:!1,desc:"Add row at index 1 (corrected to 2)",start:"<table><tbody>							<tr><td>foo</td></tr>							<tr><td>bar</td></tr>						 </tbody></table>",expected:"<table><tbody>							<tr><td>foo</td></tr>							<tr><td>&nbsp;</td></tr>							<tr><td>bar</td></tr>						 </tbody></table>",operation:function(e){e.addRow(2)}},{module:"Merging cells"},{exclude:!1,desc:"Basic columns merging",start:'<table><tbody>							<tr><td class="aloha-cell-selected">foo</td></tr>							<tr><td class="aloha-cell-selected">bar</td></tr>						</tbody></table>',expected:'<table><tbody>							<tr><td colspan="1" rowspan="2">foo bar</td></tr>							<tr></tr>						 </tbody></table>',operation:function(e){e.selection.selectedCells=t(e),
e.selection.mergeCells()}},{exclude:!1,desc:"Merging columns with inner tags",start:'<table><tbody>							<tr><td class="aloha-cell-selected"><i>foo</i></td></tr>							<tr><td class="aloha-cell-selected">bar</td></tr>						 </tbody></table>',expected:'<table><tbody>							<tr><td colspan="1" rowspan="2"><i>foo</i> bar</td></tr>							<tr></tr>						 </tbody></table>',operation:function(e){e.selection.selectedCells=t(e),e.selection.mergeCells()}},{exclude:!1,desc:"Merge a single cell",start:'<table><tbody>							<tr><td class="aloha-cell-selected">foo</td></tr>							<tr><td>bar</td></tr>						 </tbody></table>',expected:'<table><tbody>							<tr><td colspan="1" rowspan="1">foo</td></tr>							<tr><td>bar</td></tr>						 </tbody></table>',operation:function(e){e.selection.selectedCells=t(e),e.selection.mergeCells()}},{exclude:!1,desc:"Merge column",start:'<table><tbody>							<tr><td class="aloha-cell-selected">foo1</td><td>bar1</td></tr>							<tr><td class="aloha-cell-selected">foo2</td><td>bar2</td></tr>						 </tbody></table>'
,expected:'<table><tbody>							<tr><td colspan="1" rowspan="2">foo1 foo2</td><td>bar1</td></tr>							<tr><td>bar2</td></tr>						 </tbody></table>',operation:function(e){e.selection.selectedCells=t(e),e.selection.mergeCells()}},{exclude:!1,desc:"Merge column, with inner tags",start:'<table><tbody>							<tr><td class="aloha-cell-selected"><i>foo</i></td></tr>							<tr><td class="aloha-cell-selected"><i>bar</i></td></tr>						 </tbody></table>',expected:'<table><tbody>							<tr><td colspan="1" rowspan="2"><i>foo</i> <i>bar</i></td></tr>							<tr></tr>						 </tbody></table>',operation:function(e){e.selection.selectedCells=t(e),e.selection.mergeCells()}},{exclude:!1,desc:"Merge a row",start:'<table><tbody>							<tr><td class="aloha-cell-selected">foo1</td>								<td class="aloha-cell-selected">bar1</td></tr>							<tr><td>foo2</td><td>bar2</td></tr>						 </tbody></table>',expected:'<table><tbody>							<tr><td colspan="2" rowspan="1">foo1 bar1</td></tr>							<tr><td>foo2</td><td>bar2</td></tr>						 </tbody></table>'
,operation:function(e){e.selection.selectedCells=t(e),e.selection.mergeCells()}},{exclude:!1,desc:"Merge a 2x2 selection",start:'<table><tbody>							<tr><td class="aloha-cell-selected">foo1</td>								<td class="aloha-cell-selected">bar1</td></tr>							<tr><td class="aloha-cell-selected">foo2</td>								<td class="aloha-cell-selected">bar2</td></tr>						 </tbody></table>',expected:'<table><tbody>							<tr><td colspan="2" rowspan="2">								foo1 bar1 foo2 bar2							</td></tr>							<tr></tr>						 </tbody></table>',operation:function(e){e.selection.selectedCells=t(e),e.selection.mergeCells()}},{exclude:!1,desc:"Merge a 2x2 selection, with inner tags",start:'<table><tbody>							<tr><td class="aloha-cell-selected"><i>foo1</i></td>								<td class="aloha-cell-selected"><i>bar1</i></td></tr>							<tr><td class="aloha-cell-selected"><i>foo2</i></td>								<td class="aloha-cell-selected"><i>bar2</i></td></tr>						 </tbody></table>',expected:'<table><tbody>							<tr><td colspan="2" rowspan="2">								<i>foo1</i> <i>bar1</i> <i>foo2</i> <i>bar2</i>							</td></tr>							<tr></tr>						 </tbody></table>'
,operation:function(e){e.selection.selectedCells=t(e),e.selection.mergeCells()}},{exclude:!1,desc:"Prevent merging of non-rectangular selection",start:'<table><tbody>							<tr><td class="aloha-cell-selected">foo1</td>								<td class="aloha-cell-selected">bar1</td></tr>							<tr><td class="aloha-cell-selected">foo2</td>								<td>bar2</td></tr>						 </tbody></table>',expected:"<table><tbody>							<tr><td>foo1</td><td>bar1</td></tr>							<tr><td>foo2</td><td>bar2</td></tr>						 </tbody></table>",operation:function(e){e.selection.selectedCells=t(e),e.selection.mergeCells()}},{exclude:!1,desc:"Prevent attempt to merge an alreay merged cell",start:'<table><tbody>							<tr><td colspan="1" rowspan="2" class="aloha-cell-selected">foo bar</td></tr>							<tr></tr>						 </tbody></table>',expected:'<table><tbody>							<tr><td colspan="1" rowspan="2">foo bar</td></tr>							<tr></tr>						 </tbody></table>',operation:function(e){e.selection.selectedCells=t(e),e.selection.mergeCells()}},
{module:"Splitting merged cells"},{exclude:!1,desc:"Split a table with a single merged cell",start:'<table><tbody>							<tr><td colspan="1" rowspan="2" class="aloha-cell-selected">foo bar</td></tr>							<tr></tr>						 </tbody></table>',expected:"<table><tbody>							<tr><td>foo bar</td></tr>							<tr><td>&nbsp;</td></tr>						</tbody></table>",operation:function(e){e.selection.selectedCells=t(e),e.selection.splitCells()}},{exclude:!1,desc:"Split a 2x2 merged cell",start:'<table><tbody>							<tr><td colspan="1" rowspan="2" class="aloha-cell-selected">foo1 foo2</td>								<td>bar1</td></tr>							<tr><td>bar2</td></tr>						 </tbody></table>',expected:"<table><tbody>							<tr><td>foo1 foo2</td><td>bar1</td></tr>							<tr><td>&nbsp;</td><td>bar2</td></tr>						</tbody></table>",operation:function(e){e.selection.selectedCells=t(e),e.selection.splitCells()}},{exclude:!1,desc:"Split 2 merged cell, simultaneosly",start:'<table><tbody>							<tr>								<td colspan="1" rowspan="2" class="aloha-cell-selected">foo1 foo2</td>								<td colspan="1" rowspan="2" class="aloha-cell-selected">bar1 bar2</td>							</tr>						  </tbody></table>'
,expected:"<table><tbody>							<tr><td>foo1 foo2</td><td>bar1 bar2</td></tr>							<tr><td>&nbsp;</td><td>&nbsp;</td></tr>						 </tbody></table>",operation:function(e){e.selection.selectedCells=t(e),e.selection.splitCells()}},{module:"Transforming cells to headers"},{exclude:!1,desc:"Transform row as table header",start:'<table><tbody>							<tr>								<td class="aloha-cell-selected">foo</td>								<td class="aloha-cell-selected">bar</td>							</tr>						 </tbody></table>',expected:'<table><tbody>							<tr>								<th scope="col">foo</th>								<th scope="col">bar</th>							</tr>						 </tbody></table>',operation:function(e){e.selection.selectedCells=t(e),e.tablePlugin.rowHeader.onclick()}},{exclude:!1,desc:"Transform column as table header",start:'<table><tbody>							<tr><td class="aloha-cell-selected">foo1</td><td>bar1</td></tr>							<tr><td class="aloha-cell-selected">foo2</td><td>bar2</td></tr>						 </tbody></table>',expected:'<table><tbody>							<tr><th scope="row">foo1</th><td>bar1</td></tr>							<tr><th scope="row">foo2</th><td>bar2</td></tr>						 </tbody></table>'
,operation:function(e){e.selection.selectedCells=t(e),e.tablePlugin.columnHeader.onclick()}},{exclude:!1,desc:"Toggle header to td cell",start:'<table><tbody>							<tr><th scope="row" class="aloha-cell-selected">foo1</th><td>bar1</td></tr>							<tr><th scope="row" class="aloha-cell-selected">foo2</th><td>bar2</td></tr>						 </tbody></table>',expected:"<table><tbody>							<tr><td>foo1</td><td>bar1</td></tr>							<tr><td>foo2</td><td>bar2</td></tr>						 </tbody></table>",operation:function(e){e.selection.selectedCells=t(e),e.tablePlugin.columnHeader.onclick()}},{module:"Nested tables"},{exclude:!1,desc:"Nested tables",start:"<table><tbody>							<tr><td>								<table><tbody>									<tr><td>foo</td></tr>								</tbody></table>							</td></tr>						 </tbody></table>",expected:"<table><tbody>							<tr><td>								<table><tbody>									<tr><td>foo</td></tr>								</tbody></table>							</td></tr>						 </tbody></table>",operation:function(){}},{module:"Aligning columns of unbalanced table test"
},{exclude:!1,desc:"With rowspan",start:'<table><tbody>							<tr><td rowspan="2"></td><td></td></tr>							<tr><td></td></tr>						 </tbody></table>',expected:'<table><tbody>							<tr><td rowspan="2"></td><td></td></tr>							<tr><td></td></tr>						 </tbody></table>',operation:function(){}},{exclude:!1,desc:"With rowspan",start:'<table><tbody>							<tr><td rowspan="2"></td><td></td><td></td></tr>							<tr><td></td><td></td></tr>						 </tbody></table>',expected:'<table><tbody>							<tr><td rowspan="2"></td><td></td><td></td></tr>							<tr><td></td><td></td></tr>						 </tbody></table>',operation:function(){}},{exclude:!1,desc:"With no rowspan and colspan",start:"<table><tbody>							<tr><td></td><td></td></tr>							<tr><td></td></tr>						 </tbody></table>",expected:"<table><tbody>							<tr><td></td><td></td></tr>							<tr><td></td><td></td></tr>						 </tbody></table>",operation:function(){}},{exclude:!1,desc:"With colspan",start:'<table><tbody>							<tr><td colspan="2"></td></tr>							<tr><td></td></tr>						 </tbody></table>'
,expected:'<table><tbody>							<tr><td colspan="2"></td></tr>							<tr><td></td><td></td></tr>						 </tbody></table>',operation:function(){}},{exclude:!1,desc:"With colspan",start:'<table><tbody>							<tr><td colspan="2"></td></tr>							<tr><td></td></tr>							<tr><td></td><td></td></tr>						 </tbody></table>',expected:'<table><tbody>							<tr><td colspan="2"></td></tr>							<tr><td></td><td></td></tr>							<tr><td></td><td></td></tr>						 </tbody></table>',operation:function(){}},{exclude:!1,desc:'Removing redundant colspan="1" attribute',start:'<table><tbody>							<tr><td colspan="1"></td></tr>							<tr><td></td></tr>						 </tbody></table>',expected:"<table><tbody>							<tr><td></td></tr>							<tr><td></td></tr>						 </tbody></table>",operation:function(){}},{exclude:!0}];Aloha.ready(function(){var e=Aloha.require("table/table-plugin"),t=Aloha.jQuery,r=t("#editable"),i,s,o;for(var u=0;u<n.length;u++){i=n[u];if(i.exclude===!0)continue;if(i.module){module(i.module.toUpperCase
()+" :");continue}s=style_html(i.start),o=style_html(i.expected),r.html(s).aloha(),typeof i.operation=="function"&&(r.mousedown().mouseup().find("table").mousedown(),i.operation(e.activeTable)),r.mahalo(),test((i.desc||"Test").toUpperCase(),{start:s,expected:o},function(){var e=r.html().toLowerCase();e=e.replace(/([\w-]+)\s*=\s*([\w-]+)([\s>])/g,function(e,t,n,r,i,s){return t+'="'+n+'"'+r}).replace(/(<table.*?)\s*id\s*=\s*[\"\']*[^\"\']*?[\"\']*(\s|>)/ig,"$1$2").replace(/(rowspan=\"[^\"]+\") (colspan=\"[^\"+]\")/ig,"$2 $1"),e=style_html(e),deepEqual(e,o,"Check Operation Result")})}})})